// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module design_1_v_tpg_0_0_tpgForeground (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        srcImg_dout,
        srcImg_empty_n,
        srcImg_read,
        height,
        width,
        patternId,
        maskId,
        colorFormat,
        crossHairX,
        crossHairY,
        boxSize,
        boxColorR,
        boxColorG,
        boxColorB,
        motionSpeed,
        outImg_din,
        outImg_full_n,
        outImg_write
);

parameter    ap_ST_fsm_state1 = 4'd1;
parameter    ap_ST_fsm_state2 = 4'd2;
parameter    ap_ST_fsm_pp0_stage0 = 4'd4;
parameter    ap_ST_fsm_state6 = 4'd8;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [23:0] srcImg_dout;
input   srcImg_empty_n;
output   srcImg_read;
input  [15:0] height;
input  [15:0] width;
input  [7:0] patternId;
input  [7:0] maskId;
input  [7:0] colorFormat;
input  [15:0] crossHairX;
input  [15:0] crossHairY;
input  [15:0] boxSize;
input  [15:0] boxColorR;
input  [15:0] boxColorG;
input  [15:0] boxColorB;
input  [7:0] motionSpeed;
output  [23:0] outImg_din;
input   outImg_full_n;
output   outImg_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg srcImg_read;
reg outImg_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg   [15:0] boxHCoord;
reg   [15:0] boxVCoord;
reg   [0:0] hDir;
reg   [0:0] vDir;
wire   [1:0] whiYuv_2_address0;
reg    whiYuv_2_ce0;
wire   [7:0] whiYuv_2_q0;
reg    srcImg_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] icmp_ln746_reg_994;
reg    outImg_blk_n;
reg    ap_enable_reg_pp0_iter2;
reg   [0:0] icmp_ln746_reg_994_pp0_iter1_reg;
reg   [15:0] x_reg_230;
wire   [15:0] grp_fu_319_p3;
reg   [15:0] reg_335;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state3_pp0_stage0_iter0;
reg    ap_block_state4_pp0_stage0_iter1;
reg    ap_block_state5_pp0_stage0_iter2;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln746_fu_513_p2;
wire   [7:0] patternId_read_read_fu_132_p2;
wire   [0:0] icmp_ln1840_fu_524_p2;
wire   [0:0] vDir_load_load_fu_559_p1;
wire   [0:0] icmp_ln1855_fu_566_p2;
wire   [0:0] icmp_ln1859_fu_577_p2;
wire   [0:0] tobool_fu_345_p2;
wire   [15:0] hMax_fu_351_p2;
wire   [15:0] vMax_fu_357_p2;
wire   [0:0] cmp11_i106_fu_363_p2;
wire   [7:0] pixOut_fu_369_p3;
wire   [0:0] cmp13_i_fu_377_p2;
wire   [0:0] and4_i_fu_387_p2;
wire   [0:0] and10_i_fu_401_p2;
wire   [0:0] and24_i_fu_415_p2;
wire   [7:0] pixOut_4_fu_421_p1;
wire   [0:0] icmp_fu_435_p2;
wire   [7:0] pixOut_6_fu_441_p1;
wire   [15:0] zext_ln1867_1_fu_453_p1;
wire   [15:0] zext_ln1867_fu_457_p1;
wire   [1:0] select_ln1919_1_fu_469_p3;
wire   [15:0] y_1_fu_487_p2;
reg   [15:0] y_1_reg_970;
wire    ap_CS_fsm_state2;
wire   [0:0] icmp_ln744_fu_493_p2;
wire   [0:0] icmp_ln1913_fu_498_p2;
reg   [0:0] icmp_ln1913_reg_979;
wire   [15:0] x_1_fu_503_p2;
reg   [15:0] x_1_reg_984;
wire   [0:0] trunc_ln746_fu_509_p1;
reg   [0:0] trunc_ln746_reg_989;
reg   [0:0] icmp_ln1840_reg_998;
wire   [0:0] hDir_load_load_fu_530_p1;
wire   [0:0] icmp_ln1845_fu_537_p2;
wire   [0:0] icmp_ln1849_fu_548_p2;
reg   [0:0] vDir_load_reg_1014;
reg   [0:0] icmp_ln1855_reg_1018;
reg   [0:0] icmp_ln1859_reg_1022;
wire   [0:0] and_ln1913_fu_625_p2;
reg   [0:0] and_ln1913_reg_1026;
wire   [0:0] or_ln1913_fu_630_p2;
reg   [0:0] or_ln1913_reg_1033;
reg   [0:0] or_ln1913_reg_1033_pp0_iter1_reg;
wire   [7:0] pixOut_1_fu_652_p1;
reg   [7:0] pixOut_1_reg_1042;
wire   [7:0] pixOut_2_fu_656_p4;
reg   [7:0] pixOut_2_reg_1048;
wire   [7:0] pixOut_3_fu_666_p4;
reg   [7:0] pixOut_3_reg_1054;
wire   [0:0] and_ln1895_fu_740_p2;
reg   [0:0] and_ln1895_reg_1060;
wire   [7:0] pixOut_5_fu_753_p3;
wire   [7:0] select_ln1913_fu_760_p3;
reg   [7:0] select_ln1913_reg_1069;
wire   [7:0] select_ln1913_1_fu_766_p3;
reg   [7:0] select_ln1913_1_reg_1074;
wire   [7:0] select_ln1913_2_fu_773_p3;
reg   [7:0] select_ln1913_2_reg_1079;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state3;
reg   [15:0] y_reg_218;
reg    ap_block_state1;
wire    ap_CS_fsm_state6;
reg   [15:0] ap_phi_mux_x_phi_fu_234_p4;
reg   [0:0] ap_phi_mux_empty_61_phi_fu_245_p8;
wire   [0:0] ap_phi_reg_pp0_iter0_empty_61_reg_242;
reg   [7:0] ap_phi_mux_pix_val_V_2_phi_fu_262_p10;
wire   [7:0] ap_phi_reg_pp0_iter0_pix_val_V_2_reg_259;
reg   [7:0] ap_phi_reg_pp0_iter1_pix_val_V_2_reg_259;
reg   [7:0] ap_phi_reg_pp0_iter2_pix_val_V_2_reg_259;
reg   [7:0] ap_phi_mux_pix_val_V_1_phi_fu_277_p10;
wire   [7:0] ap_phi_reg_pp0_iter0_pix_val_V_1_reg_274;
reg   [7:0] ap_phi_reg_pp0_iter1_pix_val_V_1_reg_274;
reg   [7:0] ap_phi_reg_pp0_iter2_pix_val_V_1_reg_274;
reg   [7:0] ap_phi_mux_pix_val_V_phi_fu_293_p10;
wire   [7:0] ap_phi_reg_pp0_iter0_pix_val_V_reg_289;
reg   [7:0] ap_phi_reg_pp0_iter1_pix_val_V_reg_289;
reg   [7:0] ap_phi_reg_pp0_iter2_pix_val_V_reg_289;
wire   [63:0] zext_ln1919_fu_647_p1;
wire   [15:0] sub_ln1871_fu_582_p2;
wire   [15:0] add_ln1869_fu_604_p2;
reg   [15:0] boxTop_fu_112;
reg   [15:0] boxLeft_fu_116;
reg    ap_block_pp0_stage0_01001;
wire   [15:0] grp_fu_309_p2;
wire   [15:0] grp_fu_314_p2;
wire   [0:0] empty_fu_383_p1;
wire   [0:0] tmp_fu_393_p3;
wire   [0:0] tmp_1_fu_407_p3;
wire   [6:0] tmp_2_fu_425_p4;
wire   [8:0] shl_i_fu_445_p3;
wire   [15:0] or_ln1840_fu_518_p2;
wire   [0:0] icmp_ln1913_1_fu_620_p2;
wire   [0:0] or_ln1919_fu_635_p2;
wire   [1:0] select_ln1919_fu_640_p3;
wire   [0:0] ult_fu_692_p2;
wire   [15:0] boxBottom_fu_687_p2;
wire   [0:0] icmp_ln1890_fu_710_p2;
wire   [15:0] boxRight_fu_682_p2;
wire   [0:0] notrhs_fu_704_p2;
wire   [0:0] rev14_fu_698_p2;
wire   [0:0] icmp_ln1890_1_fu_722_p2;
wire   [0:0] xor_ln1890_fu_716_p2;
wire   [0:0] and_ln1895_2_fu_734_p2;
wire   [0:0] and_ln1895_1_fu_728_p2;
wire   [0:0] and_ln1899_fu_746_p2;
wire   [7:0] trunc_ln1899_fu_750_p1;
wire   [7:0] select_ln1937_fu_787_p3;
wire   [7:0] select_ln1933_fu_780_p3;
wire   [7:0] select_ln1935_fu_808_p3;
wire   [7:0] outpix_0_2_0_0_0_load_fu_794_p3;
wire   [7:0] empty_62_fu_815_p3;
wire   [7:0] outpix_0_0_0_0_0_load_fu_801_p3;
reg   [3:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_344;
reg    ap_condition_288;
reg    ap_condition_276;
reg    ap_condition_317;
reg    ap_condition_392;
reg    ap_condition_395;
reg    ap_condition_125;
reg    ap_condition_757;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 4'd1;
#0 boxHCoord = 16'd0;
#0 boxVCoord = 16'd0;
#0 hDir = 1'd0;
#0 vDir = 1'd0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
end

design_1_v_tpg_0_0_tpgForeground_whiYuv_2 #(
    .DataWidth( 8 ),
    .AddressRange( 3 ),
    .AddressWidth( 2 ))
whiYuv_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(whiYuv_2_address0),
    .ce0(whiYuv_2_ce0),
    .q0(whiYuv_2_q0)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((icmp_ln744_fu_493_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state3))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((icmp_ln744_fu_493_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state3)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state3);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if (((icmp_ln744_fu_493_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_317)) begin
        if ((1'b1 == ap_condition_276)) begin
            ap_phi_reg_pp0_iter2_pix_val_V_1_reg_274 <= pixOut_5_fu_753_p3;
        end else if ((1'b1 == ap_condition_288)) begin
            ap_phi_reg_pp0_iter2_pix_val_V_1_reg_274 <= whiYuv_2_q0;
        end else if ((1'b1 == ap_condition_344)) begin
            ap_phi_reg_pp0_iter2_pix_val_V_1_reg_274 <= {{srcImg_dout[15:8]}};
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter2_pix_val_V_1_reg_274 <= ap_phi_reg_pp0_iter1_pix_val_V_1_reg_274;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_317)) begin
        if ((1'b1 == ap_condition_276)) begin
            ap_phi_reg_pp0_iter2_pix_val_V_2_reg_259 <= pixOut_6_fu_441_p1;
        end else if ((1'b1 == ap_condition_288)) begin
            ap_phi_reg_pp0_iter2_pix_val_V_2_reg_259 <= pixOut_fu_369_p3;
        end else if ((1'b1 == ap_condition_344)) begin
            ap_phi_reg_pp0_iter2_pix_val_V_2_reg_259 <= {{srcImg_dout[23:16]}};
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter2_pix_val_V_2_reg_259 <= ap_phi_reg_pp0_iter1_pix_val_V_2_reg_259;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_317)) begin
        if ((1'b1 == ap_condition_276)) begin
            ap_phi_reg_pp0_iter2_pix_val_V_reg_289 <= pixOut_4_fu_421_p1;
        end else if ((1'b1 == ap_condition_288)) begin
            ap_phi_reg_pp0_iter2_pix_val_V_reg_289 <= 8'd240;
        end else if ((1'b1 == ap_condition_344)) begin
            ap_phi_reg_pp0_iter2_pix_val_V_reg_289 <= pixOut_1_fu_652_p1;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter2_pix_val_V_reg_289 <= ap_phi_reg_pp0_iter1_pix_val_V_reg_289;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        boxLeft_fu_116 <= boxHCoord;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1859_fu_577_p2 == 1'd1) & (vDir_load_load_fu_559_p1 == 1'd1) & (icmp_ln1840_fu_524_p2 == 1'd1) & (patternId_read_read_fu_132_p2 == 8'd1) & (icmp_ln746_fu_513_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1855_fu_566_p2 == 1'd1) & (vDir_load_load_fu_559_p1 == 1'd0) & (icmp_ln1840_fu_524_p2 == 1'd1) & (patternId_read_read_fu_132_p2 == 8'd1) & (icmp_ln746_fu_513_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (((icmp_ln1855_fu_566_p2 == 1'd0) & (vDir_load_load_fu_559_p1 == 1'd0) & (icmp_ln1840_fu_524_p2 == 1'd1) & (patternId_read_read_fu_132_p2 == 8'd1) & (icmp_ln746_fu_513_p2 == 1'd0)) | ((icmp_ln1859_fu_577_p2 == 1'd0) & (vDir_load_load_fu_559_p1 == 1'd1) & (icmp_ln1840_fu_524_p2 == 1'd1) & (patternId_read_read_fu_132_p2 == 8'd1) & (icmp_ln746_fu_513_p2 == 1'd0)))))) begin
        boxLeft_fu_116 <= grp_fu_319_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        boxTop_fu_112 <= boxVCoord;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (((icmp_ln1859_fu_577_p2 == 1'd1) & (vDir_load_load_fu_559_p1 == 1'd1) & (icmp_ln1840_fu_524_p2 == 1'd1) & (patternId_read_read_fu_132_p2 == 8'd1) & (icmp_ln746_fu_513_p2 == 1'd0)) | ((icmp_ln1855_fu_566_p2 == 1'd0) & (vDir_load_load_fu_559_p1 == 1'd0) & (icmp_ln1840_fu_524_p2 == 1'd1) & (patternId_read_read_fu_132_p2 == 8'd1) & (icmp_ln746_fu_513_p2 == 1'd0))))) begin
        boxTop_fu_112 <= add_ln1869_fu_604_p2;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (((icmp_ln1859_fu_577_p2 == 1'd0) & (vDir_load_load_fu_559_p1 == 1'd1) & (icmp_ln1840_fu_524_p2 == 1'd1) & (patternId_read_read_fu_132_p2 == 8'd1) & (icmp_ln746_fu_513_p2 == 1'd0)) | ((icmp_ln1855_fu_566_p2 == 1'd1) & (vDir_load_load_fu_559_p1 == 1'd0) & (icmp_ln1840_fu_524_p2 == 1'd1) & (patternId_read_read_fu_132_p2 == 8'd1) & (icmp_ln746_fu_513_p2 == 1'd0))))) begin
        boxTop_fu_112 <= sub_ln1871_fu_582_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_125)) begin
        if ((1'b1 == ap_condition_395)) begin
            boxVCoord <= add_ln1869_fu_604_p2;
        end else if ((1'b1 == ap_condition_392)) begin
            boxVCoord <= sub_ln1871_fu_582_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_757)) begin
        if (((icmp_ln1849_fu_548_p2 == 1'd1) & (hDir_load_load_fu_530_p1 == 1'd1))) begin
            hDir <= 1'd0;
        end else if (((icmp_ln1845_fu_537_p2 == 1'd1) & (hDir_load_load_fu_530_p1 == 1'd0))) begin
            hDir <= 1'd1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_757)) begin
        if (((icmp_ln1859_fu_577_p2 == 1'd1) & (vDir_load_load_fu_559_p1 == 1'd1))) begin
            vDir <= 1'd0;
        end else if (((icmp_ln1855_fu_566_p2 == 1'd1) & (vDir_load_load_fu_559_p1 == 1'd0))) begin
            vDir <= 1'd1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln746_reg_994 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        x_reg_230 <= x_1_reg_984;
    end else if (((icmp_ln744_fu_493_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        x_reg_230 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        y_reg_218 <= y_1_reg_970;
    end else if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        y_reg_218 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln746_reg_994 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (patternId_read_read_fu_132_p2 == 8'd1))) begin
        and_ln1895_reg_1060 <= and_ln1895_fu_740_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (patternId_read_read_fu_132_p2 == 8'd2) & (icmp_ln746_fu_513_p2 == 1'd0))) begin
        and_ln1913_reg_1026 <= and_ln1913_fu_625_p2;
        or_ln1913_reg_1033 <= or_ln1913_fu_630_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        ap_phi_reg_pp0_iter1_pix_val_V_1_reg_274 <= ap_phi_reg_pp0_iter0_pix_val_V_1_reg_274;
        ap_phi_reg_pp0_iter1_pix_val_V_2_reg_259 <= ap_phi_reg_pp0_iter0_pix_val_V_2_reg_259;
        ap_phi_reg_pp0_iter1_pix_val_V_reg_289 <= ap_phi_reg_pp0_iter0_pix_val_V_reg_289;
        x_1_reg_984 <= x_1_fu_503_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (((icmp_ln1855_reg_1018 == 1'd0) & (vDir_load_reg_1014 == 1'd0) & (icmp_ln1840_reg_998 == 1'd1) & (patternId_read_read_fu_132_p2 == 8'd1)) | ((icmp_ln1859_reg_1022 == 1'd0) & (vDir_load_reg_1014 == 1'd1) & (icmp_ln1840_reg_998 == 1'd1) & (patternId_read_read_fu_132_p2 == 8'd1)))) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln1859_reg_1022 == 1'd1) & (vDir_load_reg_1014 == 1'd1) & (icmp_ln1840_reg_998 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (patternId_read_read_fu_132_p2 == 8'd1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln1855_reg_1018 == 1'd1) & (vDir_load_reg_1014 == 1'd0) & (icmp_ln1840_reg_998 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (patternId_read_read_fu_132_p2 == 8'd1)))) begin
        boxHCoord <= reg_335;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (patternId_read_read_fu_132_p2 == 8'd1) & (icmp_ln746_fu_513_p2 == 1'd0))) begin
        icmp_ln1840_reg_998 <= icmp_ln1840_fu_524_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (vDir_load_load_fu_559_p1 == 1'd0) & (icmp_ln1840_fu_524_p2 == 1'd1) & (patternId_read_read_fu_132_p2 == 8'd1) & (icmp_ln746_fu_513_p2 == 1'd0))) begin
        icmp_ln1855_reg_1018 <= icmp_ln1855_fu_566_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (vDir_load_load_fu_559_p1 == 1'd1) & (icmp_ln1840_fu_524_p2 == 1'd1) & (patternId_read_read_fu_132_p2 == 8'd1) & (icmp_ln746_fu_513_p2 == 1'd0))) begin
        icmp_ln1859_reg_1022 <= icmp_ln1859_fu_577_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln744_fu_493_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        icmp_ln1913_reg_979 <= icmp_ln1913_fu_498_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln746_reg_994 <= icmp_ln746_fu_513_p2;
        icmp_ln746_reg_994_pp0_iter1_reg <= icmp_ln746_reg_994;
        or_ln1913_reg_1033_pp0_iter1_reg <= or_ln1913_reg_1033;
        trunc_ln746_reg_989 <= trunc_ln746_fu_509_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln746_reg_994 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        pixOut_1_reg_1042 <= pixOut_1_fu_652_p1;
        pixOut_2_reg_1048 <= {{srcImg_dout[15:8]}};
        pixOut_3_reg_1054 <= {{srcImg_dout[23:16]}};
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1859_fu_577_p2 == 1'd1) & (vDir_load_load_fu_559_p1 == 1'd1) & (icmp_ln1840_fu_524_p2 == 1'd1) & (patternId_read_read_fu_132_p2 == 8'd1) & (icmp_ln746_fu_513_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1855_fu_566_p2 == 1'd1) & (vDir_load_load_fu_559_p1 == 1'd0) & (icmp_ln1840_fu_524_p2 == 1'd1) & (patternId_read_read_fu_132_p2 == 8'd1) & (icmp_ln746_fu_513_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (((icmp_ln1855_fu_566_p2 == 1'd0) & (vDir_load_load_fu_559_p1 == 1'd0) & (icmp_ln1840_fu_524_p2 == 1'd1) & (patternId_read_read_fu_132_p2 == 8'd1) & (icmp_ln746_fu_513_p2 == 1'd0)) | ((icmp_ln1859_fu_577_p2 == 1'd0) & (vDir_load_load_fu_559_p1 == 1'd1) & (icmp_ln1840_fu_524_p2 == 1'd1) & (patternId_read_read_fu_132_p2 == 8'd1) & (icmp_ln746_fu_513_p2 == 1'd0)))))) begin
        reg_335 <= grp_fu_319_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln746_reg_994 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (patternId_read_read_fu_132_p2 == 8'd2))) begin
        select_ln1913_1_reg_1074 <= select_ln1913_1_fu_766_p3;
        select_ln1913_2_reg_1079 <= select_ln1913_2_fu_773_p3;
        select_ln1913_reg_1069 <= select_ln1913_fu_760_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1840_fu_524_p2 == 1'd1) & (patternId_read_read_fu_132_p2 == 8'd1) & (icmp_ln746_fu_513_p2 == 1'd0))) begin
        vDir_load_reg_1014 <= vDir;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        y_1_reg_970 <= y_1_fu_487_p2;
    end
end

always @ (*) begin
    if ((icmp_ln746_fu_513_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state3 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state3 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln744_fu_493_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (real_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln1849_fu_548_p2 == 1'd0) & (hDir_load_load_fu_530_p1 == 1'd1) & (icmp_ln1840_fu_524_p2 == 1'd1) & (patternId_read_read_fu_132_p2 == 8'd1) & (icmp_ln746_fu_513_p2 == 1'd0)) | ((icmp_ln1845_fu_537_p2 == 1'd1) & (hDir_load_load_fu_530_p1 == 1'd0) & (icmp_ln1840_fu_524_p2 == 1'd1) & (patternId_read_read_fu_132_p2 == 8'd1) & (icmp_ln746_fu_513_p2 == 1'd0)))) begin
        ap_phi_mux_empty_61_phi_fu_245_p8 = 1'd1;
    end else if ((((icmp_ln1845_fu_537_p2 == 1'd0) & (hDir_load_load_fu_530_p1 == 1'd0) & (icmp_ln1840_fu_524_p2 == 1'd1) & (patternId_read_read_fu_132_p2 == 8'd1) & (icmp_ln746_fu_513_p2 == 1'd0)) | ((icmp_ln1849_fu_548_p2 == 1'd1) & (hDir_load_load_fu_530_p1 == 1'd1) & (icmp_ln1840_fu_524_p2 == 1'd1) & (patternId_read_read_fu_132_p2 == 8'd1) & (icmp_ln746_fu_513_p2 == 1'd0)))) begin
        ap_phi_mux_empty_61_phi_fu_245_p8 = 1'd0;
    end else begin
        ap_phi_mux_empty_61_phi_fu_245_p8 = ap_phi_reg_pp0_iter0_empty_61_reg_242;
    end
end

always @ (*) begin
    if ((icmp_ln746_reg_994_pp0_iter1_reg == 1'd0)) begin
        if (((1'd0 == and_ln1895_reg_1060) & (patternId_read_read_fu_132_p2 == 8'd1))) begin
            ap_phi_mux_pix_val_V_1_phi_fu_277_p10 = pixOut_2_reg_1048;
        end else if (((or_ln1913_reg_1033_pp0_iter1_reg == 1'd1) & (patternId_read_read_fu_132_p2 == 8'd2))) begin
            ap_phi_mux_pix_val_V_1_phi_fu_277_p10 = select_ln1913_1_reg_1074;
        end else begin
            ap_phi_mux_pix_val_V_1_phi_fu_277_p10 = ap_phi_reg_pp0_iter2_pix_val_V_1_reg_274;
        end
    end else begin
        ap_phi_mux_pix_val_V_1_phi_fu_277_p10 = ap_phi_reg_pp0_iter2_pix_val_V_1_reg_274;
    end
end

always @ (*) begin
    if ((icmp_ln746_reg_994_pp0_iter1_reg == 1'd0)) begin
        if (((1'd0 == and_ln1895_reg_1060) & (patternId_read_read_fu_132_p2 == 8'd1))) begin
            ap_phi_mux_pix_val_V_2_phi_fu_262_p10 = pixOut_3_reg_1054;
        end else if (((or_ln1913_reg_1033_pp0_iter1_reg == 1'd1) & (patternId_read_read_fu_132_p2 == 8'd2))) begin
            ap_phi_mux_pix_val_V_2_phi_fu_262_p10 = select_ln1913_reg_1069;
        end else begin
            ap_phi_mux_pix_val_V_2_phi_fu_262_p10 = ap_phi_reg_pp0_iter2_pix_val_V_2_reg_259;
        end
    end else begin
        ap_phi_mux_pix_val_V_2_phi_fu_262_p10 = ap_phi_reg_pp0_iter2_pix_val_V_2_reg_259;
    end
end

always @ (*) begin
    if ((icmp_ln746_reg_994_pp0_iter1_reg == 1'd0)) begin
        if (((1'd0 == and_ln1895_reg_1060) & (patternId_read_read_fu_132_p2 == 8'd1))) begin
            ap_phi_mux_pix_val_V_phi_fu_293_p10 = pixOut_1_reg_1042;
        end else if (((or_ln1913_reg_1033_pp0_iter1_reg == 1'd1) & (patternId_read_read_fu_132_p2 == 8'd2))) begin
            ap_phi_mux_pix_val_V_phi_fu_293_p10 = select_ln1913_2_reg_1079;
        end else begin
            ap_phi_mux_pix_val_V_phi_fu_293_p10 = ap_phi_reg_pp0_iter2_pix_val_V_reg_289;
        end
    end else begin
        ap_phi_mux_pix_val_V_phi_fu_293_p10 = ap_phi_reg_pp0_iter2_pix_val_V_reg_289;
    end
end

always @ (*) begin
    if (((icmp_ln746_reg_994 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_x_phi_fu_234_p4 = x_1_reg_984;
    end else begin
        ap_phi_mux_x_phi_fu_234_p4 = x_reg_230;
    end
end

always @ (*) begin
    if (((icmp_ln744_fu_493_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln746_reg_994_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        outImg_blk_n = outImg_full_n;
    end else begin
        outImg_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln746_reg_994_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        outImg_write = 1'b1;
    end else begin
        outImg_write = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((icmp_ln746_reg_994 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        srcImg_blk_n = srcImg_empty_n;
    end else begin
        srcImg_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln746_reg_994 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        srcImg_read = 1'b1;
    end else begin
        srcImg_read = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        whiYuv_2_ce0 = 1'b1;
    end else begin
        whiYuv_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln744_fu_493_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (icmp_ln746_fu_513_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1)) & ~((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0)) | ((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (icmp_ln746_fu_513_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln1869_fu_604_p2 = (boxTop_fu_112 + zext_ln1867_fu_457_p1);

assign and10_i_fu_401_p2 = (tmp_fu_393_p3 & cmp11_i106_fu_363_p2);

assign and24_i_fu_415_p2 = (tmp_1_fu_407_p3 & cmp11_i106_fu_363_p2);

assign and4_i_fu_387_p2 = (empty_fu_383_p1 & cmp11_i106_fu_363_p2);

assign and_ln1895_1_fu_728_p2 = (rev14_fu_698_p2 & notrhs_fu_704_p2);

assign and_ln1895_2_fu_734_p2 = (xor_ln1890_fu_716_p2 & icmp_ln1890_1_fu_722_p2);

assign and_ln1895_fu_740_p2 = (and_ln1895_2_fu_734_p2 & and_ln1895_1_fu_728_p2);

assign and_ln1899_fu_746_p2 = (trunc_ln746_reg_989 & icmp_fu_435_p2);

assign and_ln1913_fu_625_p2 = (icmp_ln1913_reg_979 & icmp_ln1913_1_fu_620_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd3];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((icmp_ln746_reg_994_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (outImg_full_n == 1'b0)) | ((icmp_ln746_reg_994 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (srcImg_empty_n == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((icmp_ln746_reg_994_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (outImg_full_n == 1'b0)) | ((icmp_ln746_reg_994 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (srcImg_empty_n == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((icmp_ln746_reg_994_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (outImg_full_n == 1'b0)) | ((icmp_ln746_reg_994 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (srcImg_empty_n == 1'b0)));
end

always @ (*) begin
    ap_block_state1 = ((ap_done_reg == 1'b1) | (real_start == 1'b0));
end

assign ap_block_state3_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state4_pp0_stage0_iter1 = ((icmp_ln746_reg_994 == 1'd0) & (srcImg_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state5_pp0_stage0_iter2 = ((icmp_ln746_reg_994_pp0_iter1_reg == 1'd0) & (outImg_full_n == 1'b0));
end

always @ (*) begin
    ap_condition_125 = ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_condition_276 = ((icmp_ln746_reg_994 == 1'd0) & (1'd1 == and_ln1895_fu_740_p2) & (patternId_read_read_fu_132_p2 == 8'd1));
end

always @ (*) begin
    ap_condition_288 = ((icmp_ln746_reg_994 == 1'd0) & (or_ln1913_reg_1033 == 1'd0) & (patternId_read_read_fu_132_p2 == 8'd2));
end

always @ (*) begin
    ap_condition_317 = ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_condition_344 = (~(patternId_read_read_fu_132_p2 == 8'd2) & ~(patternId_read_read_fu_132_p2 == 8'd1) & (icmp_ln746_reg_994 == 1'd0));
end

always @ (*) begin
    ap_condition_392 = (((icmp_ln1859_fu_577_p2 == 1'd0) & (vDir_load_load_fu_559_p1 == 1'd1) & (icmp_ln1840_fu_524_p2 == 1'd1) & (patternId_read_read_fu_132_p2 == 8'd1) & (icmp_ln746_fu_513_p2 == 1'd0)) | ((icmp_ln1855_fu_566_p2 == 1'd1) & (vDir_load_load_fu_559_p1 == 1'd0) & (icmp_ln1840_fu_524_p2 == 1'd1) & (patternId_read_read_fu_132_p2 == 8'd1) & (icmp_ln746_fu_513_p2 == 1'd0)));
end

always @ (*) begin
    ap_condition_395 = (((icmp_ln1859_fu_577_p2 == 1'd1) & (vDir_load_load_fu_559_p1 == 1'd1) & (icmp_ln1840_fu_524_p2 == 1'd1) & (patternId_read_read_fu_132_p2 == 8'd1) & (icmp_ln746_fu_513_p2 == 1'd0)) | ((icmp_ln1855_fu_566_p2 == 1'd0) & (vDir_load_load_fu_559_p1 == 1'd0) & (icmp_ln1840_fu_524_p2 == 1'd1) & (patternId_read_read_fu_132_p2 == 8'd1) & (icmp_ln746_fu_513_p2 == 1'd0)));
end

always @ (*) begin
    ap_condition_757 = ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1840_fu_524_p2 == 1'd1) & (patternId_read_read_fu_132_p2 == 8'd1) & (icmp_ln746_fu_513_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_phi_reg_pp0_iter0_empty_61_reg_242 = 'bx;

assign ap_phi_reg_pp0_iter0_pix_val_V_1_reg_274 = 'bx;

assign ap_phi_reg_pp0_iter0_pix_val_V_2_reg_259 = 'bx;

assign ap_phi_reg_pp0_iter0_pix_val_V_reg_289 = 'bx;

assign ap_ready = internal_ap_ready;

assign boxBottom_fu_687_p2 = (boxSize + boxTop_fu_112);

assign boxRight_fu_682_p2 = (boxSize + boxLeft_fu_116);

assign cmp11_i106_fu_363_p2 = ((colorFormat == 8'd0) ? 1'b1 : 1'b0);

assign cmp13_i_fu_377_p2 = ((colorFormat == 8'd1) ? 1'b1 : 1'b0);

assign empty_62_fu_815_p3 = ((tobool_fu_345_p2[0:0] == 1'b1) ? ap_phi_mux_pix_val_V_1_phi_fu_277_p10 : select_ln1935_fu_808_p3);

assign empty_fu_383_p1 = maskId[0:0];

assign grp_fu_309_p2 = (boxLeft_fu_116 - zext_ln1867_fu_457_p1);

assign grp_fu_314_p2 = (boxLeft_fu_116 + zext_ln1867_fu_457_p1);

assign grp_fu_319_p3 = ((ap_phi_mux_empty_61_phi_fu_245_p8[0:0] == 1'b1) ? grp_fu_309_p2 : grp_fu_314_p2);

assign hDir_load_load_fu_530_p1 = hDir;

assign hMax_fu_351_p2 = (width - boxSize);

assign icmp_fu_435_p2 = ((tmp_2_fu_425_p4 != 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln1840_fu_524_p2 = ((or_ln1840_fu_518_p2 == 16'd0) ? 1'b1 : 1'b0);

assign icmp_ln1845_fu_537_p2 = ((boxLeft_fu_116 > hMax_fu_351_p2) ? 1'b1 : 1'b0);

assign icmp_ln1849_fu_548_p2 = ((boxLeft_fu_116 < zext_ln1867_1_fu_453_p1) ? 1'b1 : 1'b0);

assign icmp_ln1855_fu_566_p2 = ((boxTop_fu_112 > vMax_fu_357_p2) ? 1'b1 : 1'b0);

assign icmp_ln1859_fu_577_p2 = ((boxTop_fu_112 < zext_ln1867_1_fu_453_p1) ? 1'b1 : 1'b0);

assign icmp_ln1890_1_fu_722_p2 = ((x_reg_230 < boxRight_fu_682_p2) ? 1'b1 : 1'b0);

assign icmp_ln1890_fu_710_p2 = ((x_reg_230 < boxLeft_fu_116) ? 1'b1 : 1'b0);

assign icmp_ln1913_1_fu_620_p2 = ((ap_phi_mux_x_phi_fu_234_p4 != crossHairX) ? 1'b1 : 1'b0);

assign icmp_ln1913_fu_498_p2 = ((y_reg_218 != crossHairY) ? 1'b1 : 1'b0);

assign icmp_ln744_fu_493_p2 = ((y_reg_218 == height) ? 1'b1 : 1'b0);

assign icmp_ln746_fu_513_p2 = ((ap_phi_mux_x_phi_fu_234_p4 == width) ? 1'b1 : 1'b0);

assign notrhs_fu_704_p2 = ((y_reg_218 < boxBottom_fu_687_p2) ? 1'b1 : 1'b0);

assign or_ln1840_fu_518_p2 = (y_reg_218 | ap_phi_mux_x_phi_fu_234_p4);

assign or_ln1913_fu_630_p2 = (cmp11_i106_fu_363_p2 | and_ln1913_fu_625_p2);

assign or_ln1919_fu_635_p2 = (trunc_ln746_fu_509_p1 | cmp13_i_fu_377_p2);

assign outImg_din = {{{outpix_0_2_0_0_0_load_fu_794_p3}, {empty_62_fu_815_p3}}, {outpix_0_0_0_0_0_load_fu_801_p3}};

assign outpix_0_0_0_0_0_load_fu_801_p3 = ((tobool_fu_345_p2[0:0] == 1'b1) ? ap_phi_mux_pix_val_V_phi_fu_293_p10 : select_ln1933_fu_780_p3);

assign outpix_0_2_0_0_0_load_fu_794_p3 = ((tobool_fu_345_p2[0:0] == 1'b1) ? ap_phi_mux_pix_val_V_2_phi_fu_262_p10 : select_ln1937_fu_787_p3);

assign patternId_read_read_fu_132_p2 = patternId;

assign pixOut_1_fu_652_p1 = srcImg_dout[7:0];

assign pixOut_2_fu_656_p4 = {{srcImg_dout[15:8]}};

assign pixOut_3_fu_666_p4 = {{srcImg_dout[23:16]}};

assign pixOut_4_fu_421_p1 = boxColorR[7:0];

assign pixOut_5_fu_753_p3 = ((and_ln1899_fu_746_p2[0:0] == 1'b1) ? pixOut_6_fu_441_p1 : trunc_ln1899_fu_750_p1);

assign pixOut_6_fu_441_p1 = boxColorB[7:0];

assign pixOut_fu_369_p3 = ((cmp11_i106_fu_363_p2[0:0] == 1'b1) ? 8'd240 : 8'd128);

assign rev14_fu_698_p2 = (ult_fu_692_p2 ^ 1'd1);

assign select_ln1913_1_fu_766_p3 = ((and_ln1913_reg_1026[0:0] == 1'b1) ? pixOut_2_fu_656_p4 : 8'd240);

assign select_ln1913_2_fu_773_p3 = ((and_ln1913_reg_1026[0:0] == 1'b1) ? pixOut_1_fu_652_p1 : 8'd240);

assign select_ln1913_fu_760_p3 = ((and_ln1913_reg_1026[0:0] == 1'b1) ? pixOut_3_fu_666_p4 : pixOut_fu_369_p3);

assign select_ln1919_1_fu_469_p3 = ((cmp13_i_fu_377_p2[0:0] == 1'b1) ? 2'd1 : 2'd2);

assign select_ln1919_fu_640_p3 = ((or_ln1919_fu_635_p2[0:0] == 1'b1) ? select_ln1919_1_fu_469_p3 : 2'd1);

assign select_ln1933_fu_780_p3 = ((and4_i_fu_387_p2[0:0] == 1'b1) ? 8'd0 : ap_phi_mux_pix_val_V_phi_fu_293_p10);

assign select_ln1935_fu_808_p3 = ((and10_i_fu_401_p2[0:0] == 1'b1) ? 8'd0 : ap_phi_mux_pix_val_V_1_phi_fu_277_p10);

assign select_ln1937_fu_787_p3 = ((and24_i_fu_415_p2[0:0] == 1'b1) ? 8'd0 : ap_phi_mux_pix_val_V_2_phi_fu_262_p10);

assign shl_i_fu_445_p3 = {{motionSpeed}, {1'd0}};

assign start_out = real_start;

assign sub_ln1871_fu_582_p2 = (boxTop_fu_112 - zext_ln1867_fu_457_p1);

assign tmp_1_fu_407_p3 = maskId[32'd2];

assign tmp_2_fu_425_p4 = {{colorFormat[7:1]}};

assign tmp_fu_393_p3 = maskId[32'd1];

assign tobool_fu_345_p2 = ((maskId == 8'd0) ? 1'b1 : 1'b0);

assign trunc_ln1899_fu_750_p1 = boxColorG[7:0];

assign trunc_ln746_fu_509_p1 = ap_phi_mux_x_phi_fu_234_p4[0:0];

assign ult_fu_692_p2 = ((y_reg_218 < boxTop_fu_112) ? 1'b1 : 1'b0);

assign vDir_load_load_fu_559_p1 = vDir;

assign vMax_fu_357_p2 = (height - boxSize);

assign whiYuv_2_address0 = zext_ln1919_fu_647_p1;

assign x_1_fu_503_p2 = (ap_phi_mux_x_phi_fu_234_p4 + 16'd1);

assign xor_ln1890_fu_716_p2 = (icmp_ln1890_fu_710_p2 ^ 1'd1);

assign y_1_fu_487_p2 = (y_reg_218 + 16'd1);

assign zext_ln1867_1_fu_453_p1 = shl_i_fu_445_p3;

assign zext_ln1867_fu_457_p1 = motionSpeed;

assign zext_ln1919_fu_647_p1 = select_ln1919_fu_640_p3;

endmodule //design_1_v_tpg_0_0_tpgForeground
